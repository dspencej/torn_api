{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Torn API Python Package Documentation","text":"<p>Welcome to the documentation for the Torn API Python package. This package provides a convenient wrapper around Torn's v2 API so that you can easily access player, faction, market, racing, forum, and Torn data.</p> <p>Use the navigation on the left to explore installation instructions, usage examples, and a complete API reference.</p>"},{"location":"api_reference/","title":"API Reference","text":"<p>This section describes the available methods on the <code>TornAPIClient</code>.</p>"},{"location":"api_reference/#user-endpoints","title":"User Endpoints","text":"<ul> <li> <p>get_user_attacks(selections: str = \"default\")   Retrieve detailed attack information.</p> </li> <li> <p>get_user_attacksfull(selections: str = \"default\")   Retrieve simplified attack information.</p> </li> <li> <p>get_user_bounties(selections: str = \"default\")   Retrieve bounties placed on the user.</p> </li> <li> <p>get_user_bounties_by_id(user_id: int, selections: str = \"default\")   Retrieve bounties for a specific user.</p> </li> <li> <p>get_user_calendar()   Retrieve the competition's event start time.</p> </li> <li> <p>(\u2026 and more. See the source code in <code>src/torn_api/client.py</code> for a full list of methods.)</p> </li> </ul>"},{"location":"api_reference/#faction-endpoints","title":"Faction Endpoints","text":"<ul> <li> <p>get_faction_applications(selections: str = \"default\")   Retrieve faction applications.</p> </li> <li> <p>get_faction_attacks(selections: str = \"default\")   Retrieve detailed faction attack information.</p> </li> <li> <p>(\u2026 additional faction methods)</p> </li> </ul>"},{"location":"api_reference/#market-racing-forum-and-torn-endpoints","title":"Market, Racing, Forum, and Torn Endpoints","text":"<p>Each group of endpoints follows a similar pattern. For detailed information on each method, please refer to the source code.</p> <p>Note: The API is read-only. Make sure your selections match the access level of your API key.</p>"},{"location":"installation/","title":"Installation","text":"<p>To install the package, you can use Poetry. First, clone the repository, then install the dependencies:</p> <pre><code>git clone https://github.com/dspencej/torn-api.git\ncd torn-api\npoetry install\n</code></pre> <p>If you are using the package in your own project, simply add it as a dependency.</p> <p>Note: Ensure you are using Python 3.12 or higher.</p>"},{"location":"usage/","title":"Usage","text":"<p>Below is a simple example of how to use the Torn API Python package:</p> <pre><code>from torn_api import TornAPIClient\n\n# Initialize the client with your Torn API key.\nclient = TornAPIClient(api_key=\"YOUR_API_KEY\")\n\n# Fetch basic user data.\nuser_data = client.get_user(selections=\"basic\")\nprint(\"User Data:\", user_data)\n\n# Get detailed attacks.\nattacks = client.get_user_attacks(selections=\"default\")\nprint(\"Attacks:\", attacks)\n</code></pre> <p>For testing purposes, you can run the integration tests which are located in the <code>tests/</code> directory. Make sure to set the environment variable <code>TORN_API_KEY</code> before running the tests:</p> <pre><code>export TORN_API_KEY=\"your_actual_api_key\"\npython -m unittest tests/test.py\n</code></pre>"}]}